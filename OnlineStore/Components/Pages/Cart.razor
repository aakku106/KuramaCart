@page "/Cart"
@inject OnlineStore.Data.CartData cartData

@implements IDisposable

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
        integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<style>
    :root {
        --glass-bg: rgba(255, 69, 0, 0.15);
        --glass-border: rgba(255, 255, 255, 0.1);
        --text-glow: rgba(255, 140, 0, 0.6);
        --kushina-red: #cc2d2d;
        --kurama-orange: #e67700;
        --aqua-glow: rgba(0, 255, 255, 0.4);
        --shadow-dark: rgba(0, 0, 0, 0.5);
        --text-color: #e5e5e5;
    }

    .cart-page {
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(20, 20, 20, 0.9)),
            url('/images/naruto-kurama-bg.jpg') no-repeat center center/cover;
        color: var(--text-color);
        font-family: 'Poppins', sans-serif;
    }

    .cart-title {
        text-align: center;
        text-shadow: 0 0 5px var(--text-glow);
        color: #ffae42;
    }

    .glass-card {
        background: var(--glass-bg);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 1rem;
        box-shadow: 0 4px 8px var(--shadow-dark);
        border: 1px solid var(--glass-border);
        text-align: center;
        transition: all 0.3s ease-in-out;
    }

    .glass-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px var(--shadow-dark);
    }

    .cross {
        position: absolute;
        top: 3%;
        right: 12%;
        z-index: 106;
        text-align: center;
        font-size: 1.3rem;
        user-select: none;
        cursor: pointer;
    }

    .cart-section {
        margin-top: 2rem;
        padding: 1rem;
    }

    .cart-table {
        width: 90%;
        margin: auto;
        border-collapse: collapse;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 8px var(--shadow-dark);
        border: 2px solid var(--glass-border) !important;
        background: rgba(255, 69, 0, 0.2) !important;
    }

    .cart-table th,
    .cart-table td {
        padding: 12px;
        text-align: center;
        font-size: 1.2rem;
        background: rgba(255, 69, 0, 0.15) !important;
        border-bottom: 1px solid var(--glass-border) !important;
    }

    .cart-table th {
        background: rgba(255, 69, 0, 0.3);
    }

    .card-img-container img {
        width: 100%;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        filter: brightness(90%) contrast(90%);
    }

    .price {
        color: var(--aqua-glow);
        font-weight: bold;
        font-size: 1.3rem;
    }
</style>

<h1 class="cart-title">ü¶ä Products Added to Cart ü¶ä</h1>

<div class="beauty-products">
    <h2 class="cart-title">üíÑ Beauty Products</h2>
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var product in cartData.GetBeautyCart())
        {
            <div class="col">
                <div class="glass-card"> <i class="cross">X</i>
                    <div class="card-img-container">
                        <img src="@product.ImagePath" class="card-img-top" alt="@product.ProductName picture"
                            loading="lazy">
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@product.ProductName</h5>
                        <div class="price">Rs @product.Price</div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="cart-section">
    <h2 class="cart-title">üçΩÔ∏è Kitchen Products</h2>
    <div class="glass-card">
        <table class="cart-table">
            <tr>
                <th>Item Name</th>
                <th>Cost</th>
                <th>Quantity</th>
            </tr>
            @foreach (var item in cartData.Carts)
            {
                <tr>
                    <td>@item.ItemName</td>
                    <td>‚Çπ@item.ItemCost</td>
                    <td>@item.ItemInCart</td>
                </tr>
            }
        </table>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        cartData.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        cartData.OnChange -= StateHasChanged;
    }
}