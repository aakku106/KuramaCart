@page "/MouseControl"
@rendermode InteractiveServer
@using System.Security.Cryptography;
<style>
    .body {
        width: 100vw;
        height: 100vh;
        cursor: none;

        .control {
            position: absolute;
            top:
                @($"{x}px")
            ;
            left:
                @($"{y}px")
            ;
            background-color: rgba(147, 226, 180, 0.098);
            transform: translateX(-50%) translateY(-50%);
            box-shadow: 0px 0px 10px 10px rgba(0, 50, 37, 0.078);
            backdrop-filter: blur(5px);
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: 10px double rgba(154, 12, 59, 0.317);
            pointer-events: none !important;
        }

        h1,
        button {
            text-align: center;
        }

        button {
            top:
                @($"{appX}%")
            ;
            left:
                @($"{appY}%")
            ;
            background-color: rgba(71, 42, 198, 0.252);
            padding: 1vw;
            margin: 1vw;
            box-shadow: 0px 0px 30px 1px rgba(5, 47, 98, 0.469);
            backdrop-filter: blur(10px);
            border: 10px double rgba(87, 5, 32, 0.694);
            cursor: none;
            border-radius: 10px;
            transition: all .3s ease-in-out;

            &:active {
                background-color: rgb(255, 26, 26);
            }
        }

        .gameBtn {
            position: absolute;
            width:
                @($"{GameBoxWidth}px")
            ;
            height:
                @($"{GameBoxHeight}px")
            ;
            background-color: rgba(130, 198, 42, 0.252);
            transform: translateX(-50%) translateY(-50%);
            box-shadow: 0px 0px 100px 15px rgba(5, 91, 110, 0.469);
            border: 10px double rgba(241, 17, 91, 0.694);

            &:active {
                background-color: rgb(24, 224, 24);
            }
        }
    }
</style>
<div class="body" @onmousemove="mouseControl" @ontouchmove="touchControl">
    <h1>MouseControl Game</h1>
    <h3>level: @level</h3>
    <h3>Score: @score</h3>
    <div class="control"></div>
    @if (soundEnabled)
    {
        <audio autoplay hidden>
            <source src="/sounds/clickSound" type="audio/mpeg" />
        </audio>
    }
    @if (score < 5)
    {
        <button class="gameBtn" @onmousedown="buttonClicked" @ontouchstart="buttonTouched">Click me</button>
    }
    else
    {
        <button class="gameBtn" @onclick="restart"
            style="background-color: rgba(214, 47, 86, 0.355);border: 5px double rgba(239, 12, 88, 0.919));
                                                                                                                                                                            ">
            RESTART
        </button>
        <hr>
        <button @onclick="next"
            style="background-color: rgba(47, 214, 55, 0.215);border: 5px double rgba(239, 12, 88, 0.919));
                                                                                                                                                                            ">
            NEXT LVL!!
        </button>
    }
    <button @onclick="resetLVL">RESET LVL ❌</button>
</div>
@code {
    private int x = 50,
    y = 50,
    GameBoxHeight = 80, GameBoxWidth = 120,
    score = 0;
    private static int level = 1;
    private Random rand = new Random();
    private int appX = 50;
    private int appY = 50;
    private bool soundEnabled = false;
    private void mouseControl(MouseEventArgs m)
    {
        x = (int)m.ClientY;
        y = (int)m.ClientX;
        StateHasChanged();
    }
    private void touchControl(TouchEventArgs t)
    {
        x = (int)t.Touches[0].ClientY;
        y = (int)t.Touches[0].ClientX;
        StateHasChanged();
    }
    private void next()
    {
        score = 0;
        level++;
    }
    private void buttonClicked()
    {
        score++;
        soundEnabled = true;
        appX = rand.Next(5, 95);
        appY = rand.Next(5, 95);
        if (level == 5 && score == 1)
        {
            GameBoxHeight -= 10;
            GameBoxWidth -= 10;
        }
        if (level > 6 && level < 10 && score == 1)
        {
            GameBoxHeight -= 8;
            GameBoxWidth -= 10;
        }
        if (level > 10 && level < 15 && score == 1)
        {
            GameBoxHeight += 5;
            GameBoxWidth -= 1;
        }
        StateHasChanged();
    }
    private void buttonTouched()
    {
        score++;
        soundEnabled = true;
        appX = rand.Next(5, 95);
        appY = rand.Next(5, 95);
        if (level == 5 && score == 1)
        {
            GameBoxHeight -= 10;
            GameBoxWidth -= 10;
        }
        if (level > 6 && level < 10 && score == 1)
        {
            GameBoxHeight -= 8;
            GameBoxWidth -= 10;
        }
        if (level > 10 && level < 15 && score == 1)
        {
            GameBoxHeight += 5;
            GameBoxWidth -= 1;
        }
        StateHasChanged();
    }
    private void restart()
    {
        score = 0;
    }
    private void resetLVL()
    {
        level = 1;
        score = 0;
    }
}
@* Next day goal is to add sound with C# <Say no to js 🤣> *@