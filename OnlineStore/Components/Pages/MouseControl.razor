@page "/MouseControl"
@rendermode InteractiveServer
@using System.Security.Cryptography;
<style>
    .body {
        width: 100vw;
        height: 100vh;

        .control {
            position: absolute;
            top:
                @($"{x}px")
            ;
            left:
                @($"{y}px")
            ;
            background-color: rgba(147, 226, 180, 0.098);
            transform: translateX(-50%) translateY(-50%);
            box-shadow: 0px 0px 10px 10px rgba(0, 30, 37, 0.078);
            backdrop-filter: blur(5px);
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: 10px double rgba(154, 12, 59, 0.317);
            pointer-events: none !important;
        }

        cursor: none;


        button {
            position: absolute;
            top:
                @($"{appX}px")
            ;
            left:
                @($"{appY}px")
            ;
        }
    }
</style>
<div class="body" @onmousemove="mouseControl" @ontouchmove="touchControl">
    <h1>MouseControl</h1>
    <div class="control"></div>
    @if (score < 5)
    {
        <button @onmousedown="buttonClicked">Click me</button>
    }
    else
    {
        <h2>Game Over 🎉 Score: @score</h2>
    }
</div>
@code {
    int x = 50;
    int y = 50;
    int score = 0;
    Random rand = new Random();
    int appX = 200;
    int appY = 200;
    private void mouseControl(MouseEventArgs m)
    {
        x = (int)m.ClientY;
        y = (int)m.ClientX;
        StateHasChanged();
    }
    private void touchControl(TouchEventArgs t)
    {
        x = (int)t.Touches[0].ClientY;
        y = (int)t.Touches[0].ClientX;
        StateHasChanged();
    }
    private void buttonClicked()
    {
        score++;
        appX = rand.Next(0, 800);
        appY = rand.Next(0, 800);
        StateHasChanged();
    }
}
